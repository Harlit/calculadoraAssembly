; Programa para realizar operaciones aritméticas (+, -, x, /) entre dos numeros enteros positivos
org 100h ; Inicio del programa

include 'emu8086.inc' ; Inclusion de funciones de la libreria emu8086
DEFINE_SCAN_NUM
DEFINE_PRINT_STRING
DEFINE_PRINT_NUM
DEFINE_PRINT_NUM_UNS

jmp inicio ; Salto a la etiqueta inicio

; Declaracion de mensajes
texto db 13, 10, 
db 13, 10, 
db 13, 10, 13, 10, 'Digite el Primer Numero: $'
texto2 db 13, 10, 13, 10, 'Digite el Segundo Numero: $'
texto3 db 13, 10, 13, 10, 'La Suma Es: $'
texto4 db 13, 10, 'La Resta Es: $'
texto5 db 13, 10, 'La Multiplicacion Es: $'
texto6 db 13, 10, 'La Division es: $'

num1 dw ? ; Declaracion de variables de 2 bytes
num2 dw ? ; El símbolo "?" indica que no se inicializan con valor alguno

inicio:
mov ah, 09 ; Imprime en pantalla
lea dx, texto ; Carga la cadena de texto 1 en dx
int 21h ; Interrupcion de pantalla

call SCAN_NUM ; Llama a la funcion SCAN_NUM que toma un número del teclado y lo guarda en ax
mov num1, cx ; Mueve el número a la variable num1

mov ah, 09 ; Interrupcion para imprimir en pantalla
lea dx, texto2 ; Carga la cadena de texto 2 en dx
int 21h

call SCAN_NUM ; Llama a la funcion SCAN_NUM que toma un número del teclado y lo guarda en ax
mov num2, cx ; Mueve el número a la variable num2

; Suma
mov ah, 09
lea dx, texto3
int 21h

mov ax, num1 ; Mueve el primer número digitado a ax
add ax, num2 ; Suma los números digitados, el resultado queda almacenado en ax
call PRINT_NUM

; Resta
mov ah, 09
lea dx, texto4
int 21h
mov ax, num1 ; Mueve el primer número digitado a ax
sub ax, num2 ; Resta el segundo número del primero, el resultado queda almacenado en ax
call PRINT_NUM

; Multiplicacion
mov ah, 09
lea dx, texto5
int 21h
mov ax, num1 ; Mueve el primer número digitado a ax
mov bx, num2 ; Mueve el segundo número digitado a bx
mul bx ; ax = ax * bx
call PRINT_NUM

; Division
mov ah, 09
lea dx, texto6
int 21h
xor dx, dx ; Establece dx en cero; necesario para evitar desbordamiento en la division
mov ax, num1 ; Mueve el primer número digitado a ax
mov bx, num2 ; Mueve el segundo número digitado a bx
div bx ; ax = ax / bx, dx = ax % bx
call PRINT_NUM

ret
